name: e2e-tests
run-name: End2End tests

on:
  workflow_call:

jobs:
  tests:
    name: tests
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          # Grafana v10 with user cookie and without feature flags
          # Plugin should skip checks based on feature flags and use cookie
          - grafana-version: 10.3.0
            remote-chrome-url: ''
            feature-flags: 'accessControlOnCall,idForwarding,externalServiceAccounts'
            native-rendering: false
            # snapshots-folder: local-chrome
            name: local-chrome-10.3.0-with-features

          # Grafana v10 without user cookie and with feature flags
          - grafana-version: 10.4.5
            remote-chrome-url: ''
            feature-flags: 'accessControlOnCall,idForwarding,externalServiceAccounts'
            native-rendering: true
            # snapshots-folder: local-chrome
            name: local-chrome-10.4.5-with-features

          # Grafana v10 without user cookie and feature flags for only service accounts.
          # In this case Grafana should skip access control checks
          - grafana-version: 10.4.7
            remote-chrome-url: ws://localhost:9222
            feature-flags: 'externalServiceAccounts'
            native-rendering: false
            # snapshots-folder: remote-chrome
            name: remote-chrome-10.4.7-without-features

          # Grafana v11 with remote chrome
          - grafana-version: 11.1.0
            remote-chrome-url: ws://localhost:9222
            feature-flags: 'accessControlOnCall,idForwarding,externalServiceAccounts'
            native-rendering: false
            # snapshots-folder: remote-chrome
            name: remote-chrome-11.1.0-with-features

          # Grafana v11.3.0+security-01 with local chrome when backend does not have Grafana
          # version
          - grafana-version: 11.3.0-security-01
            feature-flags: 'accessControlOnCall,idForwarding,externalServiceAccounts'
            native-rendering: false
            # snapshots-folder: remote-chrome
            name: remote-chrome-11.3.0-security-with-features

          # Latest Grafana with local chrome and grafana-image-renderer
          - grafana-version: 11.6.0
            remote-chrome-url: ws://localhost:9222
            feature-flags: 'accessControlOnCall,idForwarding,externalServiceAccounts'
            native-rendering: false
            # snapshots-folder: remote-chrome
            name: local-chrome-11.6.0-with-features

          # Latest Grafana with local chrome and native-renderer
          - grafana-version: 11.6.0
            remote-chrome-url: ws://localhost:9222
            feature-flags: 'accessControlOnCall,idForwarding,externalServiceAccounts'
            native-rendering: true
            # snapshots-folder: remote-chrome
            name: local-chrome-11.6.0-with-features-native-renderer

    steps:
      - uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts
          path: dist

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable --prefer-offline

      # Install chrome as we will use it in e2e tests
      - name: Install browsers
        run: yarn playwright install

      - name: Run e2e tests
        env:
          GRAFANA_VERSION: ${{ matrix.grafana-version }}
          GF_REPORTER_PLUGIN_REMOTE_CHROME_URL: ${{ matrix.remote-chrome-url }}
          GF_REPORTER_PLUGIN_NATIVE_RENDERER: ${{ matrix.native-rendering }}
          GF_FEATURE_TOGGLES_ENABLE: ${{ matrix.feature-flags }}
        run: |
          # Upload/Download artifacts wont preserve permissions
          # https://github.com/actions/upload-artifact?tab=readme-ov-file#permission-loss
          # Add +x bits on executables
          chmod -R +x dist/gpx_*
 
          # Start containers
          yarn e2e:server:up

          # Sleep for a while for containers to be up and running
          sleep 20

          # Run e2e tests
          yarn e2e

          # Run API tests
          yarn e2e:report

          # yarn e2e:server:down

      # # Seems like these are very flaky. A pixel shift would
      # cause the PDFs to be reported as different. Everytime
      # chromium is being upgraded in alpine, seems like tests
      # are failing due to pixels displacing slightly!!
      # - name: Compare PDF report from plain server
      #   uses: nowsprinting/diff-pdf-action@v1
      #   with:
      #     file1: default.pdf
      #     file2: .ci/reports/${{ matrix.name }}/default.pdf
      #     options: --verbose --output-diff=default-${{ matrix.name }}-diff.pdf
      
      # - name: Compare PDF report from TLS server
      #   uses: nowsprinting/diff-pdf-action@v1
      #   with:
      #     file1: alternative.pdf
      #     file2: .ci/reports/${{ matrix.name }}/alternative.pdf
      #     options: --verbose --output-diff=alternative-${{ matrix.name }}-diff.pdf

      - name: Collect docker logs on failure
        if: failure()
        uses: jwalton/gh-docker-logs@v2
        with:
          dest: docker-logs

      - name: Upload UI Test artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ui-test-output-${{ matrix.name }}
          path: |
            test-results
            docker-logs
            default*.pdf
            alternative*.pdf
          retention-days: 1
