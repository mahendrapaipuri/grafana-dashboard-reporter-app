services:
  grafana:
    # image: grafana/grafana:latest
    container_name: 'mahendrapaipuri-dashboardreporter-app'
    build:
      context: ./.config
      args:
        grafana_image: ${GRAFANA_IMAGE:-grafana-oss}
        grafana_version: ${GRAFANA_VERSION:-11.5.0}
        development: ${DEVELOPMENT:-false}
        go_version: ${GOVERSION:-1.23.2}
    cap_add:
      - SYS_PTRACE
    ports:
      - 3000:${GF_SERVER_HTTP_PORT:-3000}/tcp
      - 2345:2345/tcp # delve
    security_opt:
      - "apparmor:unconfined"
      - "seccomp:unconfined"
    volumes:
      - ./dist:/var/lib/grafana/plugins/mahendrapaipuri-dashboardreporter-app
      - ./provisioning:/etc/grafana/provisioning
      - ./:/root/mahendrapaipuri-dashboardreporter-app
    environment:
      # basic settings
      # output to terminal
      - TERM=linux
      - GF_DEFAULT_APP_MODE=development
      - GF_SERVER_HTTP_PORT=${GF_SERVER_HTTP_PORT:-3000}
      - GF_LOG_LEVEL=${GF_LOG_LEVEL:-info}
      - GF_DATAPROXY_LOGGING=true
      - GF_DATAPROXY_SEND_USER_HEADER=true
      # allow anonymous admin so we don't have to set up a password to start testing
      - GF_AUTH_ANONYMOUS_ENABLED=${GF_AUTH_ANONYMOUS_ENABLED:-false}
      - GF_AUTH_LOGIN_COOKIE_NAME=${GF_AUTH_LOGIN_COOKIE_NAME:-grafana_session}
      - GF_AUTH_BASIC_ENABLED=${GF_AUTH_BASIC_ENABLED:-false}
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      # skip login page
      # - GF_AUTH_DISABLE_LOGIN_FORM=true
      # We need to toggle external service accounts so that Grafana will get
      # the token from a service account to read dashboards
      - GF_FEATURE_TOGGLES_ENABLE=${GF_FEATURE_TOGGLES_ENABLE:-accessControlOnCall,idForwarding,externalServiceAccounts}
      - GF_AUTH_MANAGED_SERVICE_ACCOUNTS_ENABLED=${GF_AUTH_MANAGED_SERVICE_ACCOUNTS_ENABLED:-true}
      # disable alerting and Grafana live because it vomits logs
      - GF_ALERTING_ENABLED=false
      - GF_UNIFIED_ALERTING_ENABLED=false
      - GF_LIVE_MAX_CONNECTIONS=0
      - GF_PLUGINS_DISABLE_PLUGINS=grafana-lokiexplore-app
      # Grafana image renderer
      - GF_RENDERING_SERVER_URL=http://renderer:8081/render
      - GF_RENDERING_CALLBACK_URL=http://grafana:${GF_SERVER_HTTP_PORT:-3000}/
      - "GF_LOG_FILTERS=rendering:debug plugin.mahendrapaipuri-dashboardreporter-app:debug"
      # Current plugin config
      - GF_REPORTER_PLUGIN_NATIVE_RENDERER=${GF_REPORTER_PLUGIN_NATIVE_RENDERER:-false}
  renderer:
    image: grafana/grafana-image-renderer:latest
    environment:
      # Recommendation of grafana-image-renderer for optimal performance
      # https://grafana.com/docs/grafana/latest/setup-grafana/image-rendering/#configuration
      - RENDERING_MODE=clustered
      - RENDERING_CLUSTERING_MODE=context
      - RENDERING_CLUSTERING_MAX_CONCURRENCY=5
      - RENDERING_CLUSTERING_TIMEOUT=60
      - IGNORE_HTTPS_ERRORS=true
      # - RENDERING_ARGS=--no-sandbox,--disable-setuid-sandbox,--disable-dev-shm-usage,--disable-accelerated-2d-canvas,--disable-gpu,--remote-debugging-port=9090
    ports:
      - 8081
      # - 9090
  chrome:
    image: chromedp/headless-shell:latest
    shm_size: 2G
    init: true
    network_mode: service:grafana
